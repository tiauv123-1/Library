-- KhataHybridUI.lua - UI tổng hợp từ Rayfield, Fluent, Wizard, Material
-- Tác giả: Khata ✨

local Library = {}
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")

function Library:MakeWindow(opts)
    local ScreenGui = Instance.new("ScreenGui", CoreGui)
    ScreenGui.Name = opts.Title or "KhataFusionUI"
    ScreenGui.ResetOnSpawn = false

    local Main = Instance.new("Frame", ScreenGui)
    Main.Size = UDim2.new(0, 450, 0, 400)
    Main.Position = UDim2.new(0.5, -225, 0.5, -200)
    Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Main.BorderSizePixel = 0
    Main.ClipsDescendants = true

    Instance.new("UICorner", Main).CornerRadius = UDim.new(0, 10)
    Instance.new("UIListLayout", Main).Padding = UDim.new(0, 6)

    local Window = {}

    function Window:MakeTab(optsTab)
        local Tab = Instance.new("Frame", Main)
        Tab.Size = UDim2.new(1, -20, 0, 300)
        Tab.BackgroundTransparency = 1
        Tab.Name = optsTab.Title or "Tab"
        Instance.new("UIListLayout", Tab).Padding = UDim.new(0, 5)

        local PublicTab = {}

        function PublicTab:AddButton(opts)
            local Btn = Instance.new("TextButton", Tab)
            Btn.Size = UDim2.new(1, 0, 0, 36)
            Btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            Btn.TextColor3 = Color3.new(1, 1, 1)
            Btn.Font = Enum.Font.GothamBold
            Btn.TextSize = 16
            Btn.Text = opts.Title or "Button"
            Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 8)
            Btn.MouseButton1Click:Connect(function()
                if opts.Callback then pcall(opts.Callback) end
            end)
        end

        function PublicTab:AddToggle(opts)
            local Frame = Instance.new("Frame", Tab)
            Frame.Size = UDim2.new(1, 0, 0, 32)
            Frame.BackgroundTransparency = 1

            local Btn = Instance.new("TextButton", Frame)
            Btn.Size = UDim2.new(0.85, 0, 1, 0)
            Btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            Btn.Text = opts.Title or "Toggle"
            Btn.TextColor3 = Color3.new(1, 1, 1)
            Btn.Font = Enum.Font.GothamSemibold
            Btn.TextSize = 15
            Instance.new("UICorner", Btn)

            local State = Instance.new("Frame", Frame)
            State.Size = UDim2.new(0.15, -6, 1, 0)
            State.Position = UDim2.new(0.85, 6, 0, 0)
            State.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
            Instance.new("UICorner", State)

            local toggled = false
            Btn.MouseButton1Click:Connect(function()
                toggled = not toggled
                State.BackgroundColor3 = toggled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(100, 0, 0)
                if opts.Callback then pcall(opts.Callback, toggled) end
            end)
        end

        function PublicTab:AddSlider(opts)
            local Holder = Instance.new("Frame", Tab)
            Holder.Size = UDim2.new(1, 0, 0, 36)
            Holder.BackgroundTransparency = 1

            local Label = Instance.new("TextLabel", Holder)
            Label.Text = opts.Title or "Slider"
            Label.Font = Enum.Font.GothamSemibold
            Label.TextColor3 = Color3.new(1,1,1)
            Label.TextSize = 14
            Label.BackgroundTransparency = 1
            Label.Size = UDim2.new(0.3, 0, 1, 0)

            local SliderBack = Instance.new("Frame", Holder)
            SliderBack.Position = UDim2.new(0.32, 0, 0.3, 0)
            SliderBack.Size = UDim2.new(0.65, 0, 0.4, 0)
            SliderBack.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            Instance.new("UICorner", SliderBack)

            local Fill = Instance.new("Frame", SliderBack)
            Fill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            Fill.Size = UDim2.new(0, 0, 1, 0)

            local dragging = false
            local function update(input)
                local size = math.clamp((input.Position.X - SliderBack.AbsolutePosition.X) / SliderBack.AbsoluteSize.X, 0, 1)
                Fill.Size = UDim2.new(size, 0, 1, 0)
                local value = math.floor(((opts.Max or 100) - (opts.Min or 0)) * size + (opts.Min or 0))
                if opts.Callback then pcall(opts.Callback, value) end
            end

            SliderBack.InputBegan:Connect(function(i)
                if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
            end)

            game:GetService("UserInputService").InputChanged:Connect(function(i)
                if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then update(i) end
            end)

            game:GetService("UserInputService").InputEnded:Connect(function(i)
                if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
            end)
        end

        function PublicTab:AddTextbox(opts)
            local Box = Instance.new("TextBox", Tab)
            Box.Size = UDim2.new(1, 0, 0, 32)
            Box.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            Box.PlaceholderText = opts.Placeholder or "Nhập gì đó..."
            Box.TextColor3 = Color3.new(1,1,1)
            Box.Font = Enum.Font.Gotham
            Box.TextSize = 14
            Instance.new("UICorner", Box)
            Box.FocusLost:Connect(function(enter)
                if enter and opts.Callback then
                    pcall(opts.Callback, Box.Text)
                end
            end)
        end

        function PublicTab:AddDropdown(opts)
            local Holder = Instance.new("Frame", Tab)
            Holder.Size = UDim2.new(1, 0, 0, 36)
            Holder.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            Instance.new("UICorner", Holder)

            local Btn = Instance.new("TextButton", Holder)
            Btn.Text = opts.Title or "Dropdown"
            Btn.Size = UDim2.new(1, 0, 1, 0)
            Btn.BackgroundTransparency = 1
            Btn.TextColor3 = Color3.new(1, 1, 1)
            Btn.Font = Enum.Font.Gotham
            Btn.TextSize = 14

            local ListOpen = false
            local List = {}

            Btn.MouseButton1Click:Connect(function()
                if ListOpen then
                    for _, v in pairs(List) do v:Destroy() end
                    ListOpen = false
                else
                    for i, item in pairs(opts.Options or {}) do
                        local Choice = Instance.new("TextButton", Tab)
                        Choice.Text = tostring(item)
                        Choice.Size = UDim2.new(1, 0, 0, 28)
                        Choice.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
                        Choice.TextColor3 = Color3.new(1,1,1)
                        Instance.new("UICorner", Choice)
                        table.insert(List, Choice)
                        Choice.MouseButton1Click:Connect(function()
                            Btn.Text = tostring(item)
                            for _, v in pairs(List) do v:Destroy() end
                            ListOpen = false
                            if opts.Callback then pcall(opts.Callback, item) end
                        end)
                    end
                    ListOpen = true
                end
            end)
        end

        return PublicTab
    end

    return Window
end

return Library
